<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
				 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.ohdsi</groupId>
	<artifactId>CohortIncidence</artifactId>
	<version>1.0.3-SNAPSHOT</version>
	<build>
		<sourceDirectory>${basedir}/java/main/java</sourceDirectory>
		<outputDirectory>${basedir}/target/classes</outputDirectory>
		<resources>
			<resource>
				<directory>java/main/resources</directory>
			</resource>
		</resources>
		<testSourceDirectory>${basedir}/java/test/java</testSourceDirectory>
		<testResources>
			<testResource>
				<directory>java/test/resources</directory>
			</testResource>
		</testResources>
		<plugins>			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- Copy project dependency -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>copy-installed</id>
						<phase>install</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
									<type>${project.packaging}</type>
								</artifactItem>
							</artifactItems>
							<outputDirectory>inst/java</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>inst/java</outputDirectory>
							<includeScope>compile</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.5</version>
				<executions>
					<!--
							Prepares the property pointing to the JaCoCo runtime agent which
							is passed as VM argument when Maven the Surefire plugin is executed.
					-->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
							<!--
									Sets the name of the property containing the settings
									for JaCoCo runtime agent.
							-->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!--
							Ensures that the code coverage report for unit tests is created after
							unit tests have been run.
					-->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.15</version>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>${skip.unit.tests}</skipTests>
					<!-- Excludes integration tests when unit tests are run. -->
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
				</configuration>
			</plugin>      
		</plugins>
	</build>
	<name>cohortIncidence</name>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>  
	<repositories>
		<repository>
			<id>ohdsi</id>
			<name>repo.ohdsi.org</name>
			<url>https://repo.ohdsi.org/nexus/content/groups/public</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>ohdsi</id>
			<name>repo.ohdsi.org</name>
			<url>https://repo.ohdsi.org/nexus/content/groups/public</url>
		</pluginRepository>
	</pluginRepositories>
	<dependencies>
		<dependency>
			<groupId>org.ohdsi</groupId>
			<artifactId>standardized-analysis-specs</artifactId>
			<version>1.4.0-SNAPSHOT</version>
		</dependency>  
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
			<version>1.5.20.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
			<version>2.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.7.0</version>
			<scope>test</scope>
		</dependency>    
		<dependency>
			<groupId>com.github.mjeanroy</groupId>
			<artifactId>dbunit-plus</artifactId>
			<version>2.0.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.opentable.components</groupId>
			<artifactId>otj-pg-embedded</artifactId>
			<version>0.13.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ohdsi.sql</groupId>
			<artifactId>SqlRender</artifactId>
			<version>1.6.8</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>